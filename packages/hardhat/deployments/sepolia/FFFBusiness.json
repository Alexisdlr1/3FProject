{
  "address": "0x51518e534f890eE2B28723448ddF16b1a4EF709f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "rank",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "NewRankReached",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Refund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalRequest",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositMemberFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBusinessWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentMember",
          "type": "address"
        }
      ],
      "name": "getMemberBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentMember",
          "type": "address"
        }
      ],
      "name": "getTotalAffiliatesPerMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalMembers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uplineAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "memberEntrance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5785a6b132593baefc403104e29871b36b6d50af19bae041427766fc133e267d",
  "receipt": {
    "to": null,
    "from": "0x2C286498a497dA07cAa975ad435b0fD047F7C6aE",
    "contractAddress": "0x51518e534f890eE2B28723448ddF16b1a4EF709f",
    "transactionIndex": 26,
    "gasUsed": "1731105",
    "logsBloom": "0x
    "blockHash": "0x0b7f984536106bc01ca96409ba53bdf1cd6f1ddecdce5bd74f92861af9b1461f",
    "transactionHash": "0x5785a6b132593baefc403104e29871b36b6d50af19bae041427766fc133e267d",
    "logs": [
      {
        "transactionIndex": 26,
        "blockNumber": 6914904,
        "transactionHash": "0x5785a6b132593baefc403104e29871b36b6d50af19bae041427766fc133e267d",
        "address": "0x51518e534f890eE2B28723448ddF16b1a4EF709f",
        "topics": [
          "0x7f48e4f7f3ef2c63408b16a799b8516cb879c145386aedd51a36938a02a1c283",
          "0x0000000000000000000000002c286498a497da07caa975ad435b0fd047f7c6ae"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000006715ff38",
        "logIndex": 21,
        "blockHash": "0x0b7f984536106bc01ca96409ba53bdf1cd6f1ddecdce5bd74f92861af9b1461f"
      }
    ],
    "blockNumber": 6914904,
    "cumulativeGasUsed": "3369889",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4B846D9d563D434d275e2d3a532c30B0574DcA2e"
  ],
  "numDeployments": 2,
  "solcInputHash": "d775545dabb75b63d54ebc7fec2c75ed",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NewMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"rank\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NewRankReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WithdrawalRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositMemberFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBusinessWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentMember\",\"type\":\"address\"}],\"name\":\"getMemberBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentMember\",\"type\":\"address\"}],\"name\":\"getTotalAffiliatesPerMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMembers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uplineAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"memberEntrance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FFFBusiness.sol\":\"FFFBusiness\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/FFFBusiness.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.2 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract FFFBusiness {\\n    IERC20 public token;\\n    address payable private _businessWallet;\\n    uint128 private _totalMembers;\\n\\n   // To modify when contract is changed to USDT\\n    uint128 private constant _MIN_AMOUNT_TO_TRANSFER = 2000 * 10**6; // 2000 USDT\\n    uint128 private constant _MAX_MEMBER_BALANCE = 50000 * 10**6; // 50,000 USDT en ether (31.07 ETH)\\n    uint128 private constant _DEPOSIT_MULTIPLE = 1000 * 10**6; // M\\u00faltiplo de 1000 USDT en ether (0.62 ETH)\\n\\n    uint8 private constant _REFUND_TIER_ONE = 5;\\n    uint8 private constant _REFUND_TIER_TWO = 10;\\n    uint8 private constant _REFUND_TIER_THREE = 15;\\n    uint8 private constant _REFUND_TIER_FOUR = 20;\\n    uint8 private constant _REFUND_TIER_FIVE = 25;\\n\\n    uint8 private constant _QUALIFY_TO_IMPROVE_RANK = 3;\\n\\n    enum Ranks { Sapphire, Pearl, Ruby, Emerald, Diamond }\\n\\n    struct Member {\\n        address payable memberWallet;\\n        bool isActive;\\n        uint balance;\\n        Ranks rank;\\n    }\\n\\n    mapping(address => Member) private members;\\n    mapping(address => address[]) private enrolled;\\n\\n    event Deposit(address indexed from, uint amount, uint timestamp);\\n    event Transfer(address indexed from, address indexed to, uint amount, uint timestamp);\\n    event WithdrawalRequest(address indexed to, uint amount, uint timestamp);\\n    event Refund(address indexed to, uint amount, uint timestamp);\\n    event NewMember(address indexed member, uint timestamp);\\n    event NewRankReached(address indexed member, string rank, uint timestamp);\\n\\n    constructor(address tokenAddress) {\\n        _businessWallet = payable(msg.sender);\\n        token = IERC20(tokenAddress);  \\n        createMember(_businessWallet);\\n    }\\n\\n    modifier onlyActiveMember() {\\n        require(members[msg.sender].isActive, \\\"Miembro no activo\\\");\\n        _;\\n    }\\n\\n    modifier checkValidAddress(address _recipient) {\\n        require(_recipient != address(0), \\\"Direccion invalida\\\");\\n        _;\\n    }\\n\\n    // Only for development\\n    function getBusinessWallet() public view returns (address) {\\n        return _businessWallet;\\n    }\\n\\n    function getTotalMembers() public view returns (uint) {\\n        return _totalMembers;\\n    }\\n    // =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\\n\\n    receive() external payable {}\\n\\n    function deposit() public payable {}\\n\\n    function depositMemberFunds(uint _amount) public {\\n        require(_amount <= token.balanceOf(msg.sender), \\\"No cuentas con USDT en tu wallet\\\");\\n        require(_amount >= _MIN_AMOUNT_TO_TRANSFER, \\\"Deposito minimo es de 2000 USDT\\\");\\n        require(_amount % _DEPOSIT_MULTIPLE == 0, \\\"Solo puede depositar de mil en mil\\\");\\n\\n        Member storage member = members[msg.sender];\\n        uint newTotalBalance = member.balance + _amount;\\n        require(newTotalBalance <= _MAX_MEMBER_BALANCE, \\\"Has alcanzado el limite maxiomo de 50,000 USDT\\\");\\n\\n        require(token.transferFrom(msg.sender, address(this), _amount), \\\"Transferencia fallida\\\");\\n\\n        member.balance += _amount;\\n        emit Deposit(msg.sender, _amount, block.timestamp);\\n\\n        uint refundToMember = _calculateRefund(_amount, member.rank);\\n        uint refundToBusiness = _amount - refundToMember;\\n\\n        _processPayment(_businessWallet, refundToBusiness);\\n        _processPayment(payable(msg.sender), refundToMember);\\n        emit Refund(msg.sender, refundToMember, block.timestamp);\\n    }\\n\\n    function memberEntrance(address _uplineAddress, uint _amount) public {\\n        if (!members[msg.sender].isActive) {\\n            createMember(payable(msg.sender));\\n        }\\n        if (_uplineAddress != address(0)) {\\n            enrolled[_uplineAddress].push(msg.sender);\\n            _updateMemberRank(_uplineAddress);\\n        }\\n\\n        depositMemberFunds(_amount);\\n    }\\n\\n    function getMemberBalance(address _currentMember) public view returns(uint) {\\n        return members[_currentMember].balance;\\n    }\\n\\n    function getTotalAffiliatesPerMember(address _currentMember) public view returns(uint) {\\n        return enrolled[_currentMember].length;\\n    }\\n\\n    function _processPayment(address payable _to, uint _amount) private {\\n        require(_amount > 0, \\\"La cantidad a tranferir debe ser mayor a cero\\\");\\n        require(token.transfer(_to, _amount), \\\"Ha fallado la tranferencia\\\");\\n    }\\n\\n    function _calculateRefund(uint _amount, Ranks _rank) private pure returns (uint) {\\n        uint refundPercent;\\n        if (_rank == Ranks.Diamond) refundPercent = _REFUND_TIER_FIVE;\\n        else if (_rank == Ranks.Emerald) refundPercent = _REFUND_TIER_FOUR;\\n        else if (_rank == Ranks.Ruby) refundPercent = _REFUND_TIER_THREE;\\n        else if (_rank == Ranks.Pearl) refundPercent = _REFUND_TIER_TWO;\\n        else refundPercent = _REFUND_TIER_ONE;\\n\\n        return (_amount * refundPercent) / 100;\\n    }\\n\\n    function _updateMemberRank(address _uplineAddress) private {\\n        Member storage member = members[_uplineAddress];\\n        uint referralCount = enrolled[_uplineAddress].length;\\n\\n        if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 5 && member.rank != Ranks.Diamond) {\\n            member.rank = Ranks.Diamond;\\n            emit NewRankReached(_uplineAddress, \\\"Diamond\\\", block.timestamp);\\n        } else if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 4 && member.rank != Ranks.Emerald) {\\n            member.rank = Ranks.Emerald;\\n            emit NewRankReached(_uplineAddress, \\\"Emerald\\\", block.timestamp);\\n        } else if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 3 && member.rank != Ranks.Ruby) {\\n            member.rank = Ranks.Ruby;\\n            emit NewRankReached(_uplineAddress, \\\"Ruby\\\", block.timestamp);\\n        } else if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 2 && member.rank != Ranks.Pearl) {\\n            member.rank = Ranks.Pearl;\\n            emit NewRankReached(_uplineAddress, \\\"Pearl\\\", block.timestamp);\\n        }\\n    }\\n\\n    function createMember(address payable _newMember) internal checkValidAddress(_newMember) {\\n        members[_newMember] = Member({\\n            memberWallet: _newMember,\\n            isActive: true,\\n            balance: 0,\\n            rank: Ranks.Sapphire\\n        });\\n\\n        _totalMembers++;\\n        emit NewMember(_newMember, block.timestamp);\\n    }\\n}\\n\",\"keccak256\":\"0xe80e1c1ab9068e1809dcf5554d66c03af31ef4c7edae471afcc367aeb0e9836d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620021d2380380620021d28339818101604052810190620000379190620003c1565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000eb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620000f260201b60201c565b5062000565565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000165576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015c9062000454565b60405180910390fd5b60405180608001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020016000815260200160006004811115620001b357620001b262000476565b5b815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055506040820151816001015560608201518160020160006101000a81548160ff0219169083600481111562000294576200029362000476565b5b02179055509050506002600081819054906101000a90046fffffffffffffffffffffffffffffffff1680929190620002cc90620004f0565b91906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550508173ffffffffffffffffffffffffffffffffffffffff167f7f48e4f7f3ef2c63408b16a799b8516cb879c145386aedd51a36938a02a1c283426040516200034b919062000548565b60405180910390a25050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000389826200035c565b9050919050565b6200039b816200037c565b8114620003a757600080fd5b50565b600081519050620003bb8162000390565b92915050565b600060208284031215620003da57620003d962000357565b5b6000620003ea84828501620003aa565b91505092915050565b600082825260208201905092915050565b7f446972656363696f6e20696e76616c6964610000000000000000000000000000600082015250565b60006200043c601283620003f3565b9150620004498262000404565b602082019050919050565b600060208201905081810360008301526200046f816200042d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006fffffffffffffffffffffffffffffffff82169050919050565b6000620004fd82620004d4565b91506fffffffffffffffffffffffffffffffff8203620005225762000521620004a5565b5b600182019050919050565b6000819050919050565b62000542816200052d565b82525050565b60006020820190506200055f600083018462000537565b92915050565b611c5d80620005756000396000f3fe60806040526004361061007f5760003560e01c8063d0e30db01161004e578063d0e30db014610147578063d194770514610151578063de36b7751461018e578063fc0c546a146101b757610086565b80638f1803051461008b5780639f8dcfe9146100b6578063aa331db5146100df578063ca55753a1461010a57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a06101e2565b6040516100ad9190611136565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190611182565b61021a565b005b3480156100eb57600080fd5b506100f461066a565b60405161010191906111f0565b60405180910390f35b34801561011657600080fd5b50610131600480360381019061012c9190611237565b610694565b60405161013e9190611136565b60405180910390f35b61014f6106e0565b005b34801561015d57600080fd5b5061017860048036038101906101739190611237565b6106e2565b6040516101859190611136565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190611264565b61072e565b005b3480156101c357600080fd5b506101cc610877565b6040516101d99190611303565b60405180910390f35b6000600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161027391906111f0565b602060405180830381865afa158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b49190611333565b8111156102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed906113bd565b60405180910390fd5b63773594006fffffffffffffffffffffffffffffffff1681101561034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034690611429565b60405180910390fd5b6000633b9aca006fffffffffffffffffffffffffffffffff16826103739190611478565b146103b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103aa9061151b565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000828260010154610408919061156a565b9050640ba43b74006fffffffffffffffffffffffffffffffff16811115610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b90611610565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016104c193929190611630565b6020604051808303816000875af11580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061169f565b610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611718565b60405180910390fd5b82826001016000828254610557919061156a565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1584426040516105a6929190611738565b60405180910390a260006105cb848460020160009054906101000a900460ff1661089b565b9050600081856105db9190611761565b9050610609600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826109a9565b61061333836109a9565b3373ffffffffffffffffffffffffffffffffffffffff167f73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6834260405161065b929190611738565b60405180910390a25050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1661078c5761078b33610acd565b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461086a57600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061086982610d25565b5b6108738161021a565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806004808111156108b1576108b0611795565b5b8360048111156108c4576108c3611795565b5b036108d557601960ff169050610988565b600360048111156108e9576108e8611795565b5b8360048111156108fc576108fb611795565b5b0361090d57601460ff169050610987565b6002600481111561092157610920611795565b5b83600481111561093457610933611795565b5b0361094557600f60ff169050610986565b6001600481111561095957610958611795565b5b83600481111561096c5761096b611795565b5b0361097d57600a60ff169050610985565b600560ff1690505b5b5b5b6064818561099691906117c4565b6109a09190611806565b91505092915050565b600081116109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e3906118a9565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610a479291906118ea565b6020604051808303816000875af1158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a919061169f565b610ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac09061195f565b60405180910390fd5b5050565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b34906119cb565b60405180910390fd5b60405180608001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020016000815260200160006004811115610b8857610b87611795565b5b815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055506040820151816001015560608201518160020160006101000a81548160ff02191690836004811115610c6657610c65611795565b5b02179055509050506002600081819054906101000a90046fffffffffffffffffffffffffffffffff1680929190610c9c90611a07565b91906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550508173ffffffffffffffffffffffffffffffffffffffff167f7f48e4f7f3ef2c63408b16a799b8516cb879c145386aedd51a36938a02a1c28342604051610d199190611136565b60405180910390a25050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506005600360ff1682610dc19190611806565b10158015610e045750600480811115610ddd57610ddc611795565b5b8260020160009054906101000a900460ff166004811115610e0157610e00611795565b5b14155b15610e895760048260020160006101000a81548160ff02191690836004811115610e3157610e30611795565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a842604051610e7c9190611a8b565b60405180910390a2611118565b6004600360ff1682610e9b9190611806565b10158015610edf575060036004811115610eb857610eb7611795565b5b8260020160009054906101000a900460ff166004811115610edc57610edb611795565b5b14155b15610f645760038260020160006101000a81548160ff02191690836004811115610f0c57610f0b611795565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a842604051610f579190611b05565b60405180910390a2611117565b60038060ff1682610f759190611806565b10158015610fb9575060026004811115610f9257610f91611795565b5b8260020160009054906101000a900460ff166004811115610fb657610fb5611795565b5b14155b1561103e5760028260020160006101000a81548160ff02191690836004811115610fe657610fe5611795565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a8426040516110319190611b7f565b60405180910390a2611116565b6002600360ff16826110509190611806565b1015801561109457506001600481111561106d5761106c611795565b5b8260020160009054906101000a900460ff16600481111561109157611090611795565b5b14155b156111155760018260020160006101000a81548160ff021916908360048111156110c1576110c0611795565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a84260405161110c9190611bf9565b60405180910390a25b5b5b5b505050565b6000819050919050565b6111308161111d565b82525050565b600060208201905061114b6000830184611127565b92915050565b600080fd5b61115f8161111d565b811461116a57600080fd5b50565b60008135905061117c81611156565b92915050565b60006020828403121561119857611197611151565b5b60006111a68482850161116d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111da826111af565b9050919050565b6111ea816111cf565b82525050565b600060208201905061120560008301846111e1565b92915050565b611214816111cf565b811461121f57600080fd5b50565b6000813590506112318161120b565b92915050565b60006020828403121561124d5761124c611151565b5b600061125b84828501611222565b91505092915050565b6000806040838503121561127b5761127a611151565b5b600061128985828601611222565b925050602061129a8582860161116d565b9150509250929050565b6000819050919050565b60006112c96112c46112bf846111af565b6112a4565b6111af565b9050919050565b60006112db826112ae565b9050919050565b60006112ed826112d0565b9050919050565b6112fd816112e2565b82525050565b600060208201905061131860008301846112f4565b92915050565b60008151905061132d81611156565b92915050565b60006020828403121561134957611348611151565b5b60006113578482850161131e565b91505092915050565b600082825260208201905092915050565b7f4e6f206375656e74617320636f6e205553445420656e2074752077616c6c6574600082015250565b60006113a7602083611360565b91506113b282611371565b602082019050919050565b600060208201905081810360008301526113d68161139a565b9050919050565b7f4465706f7369746f206d696e696d6f2065732064652032303030205553445400600082015250565b6000611413601f83611360565b915061141e826113dd565b602082019050919050565b6000602082019050818103600083015261144281611406565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114838261111d565b915061148e8361111d565b92508261149e5761149d611449565b5b828206905092915050565b7f536f6c6f207075656465206465706f7369746172206465206d696c20656e206d60008201527f696c000000000000000000000000000000000000000000000000000000000000602082015250565b6000611505602283611360565b9150611510826114a9565b604082019050919050565b60006020820190508181036000830152611534816114f8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115758261111d565b91506115808361111d565b92508282019050808211156115985761159761153b565b5b92915050565b7f48617320616c63616e7a61646f20656c206c696d697465206d6178696f6d6f2060008201527f64652035302c3030302055534454000000000000000000000000000000000000602082015250565b60006115fa602e83611360565b91506116058261159e565b604082019050919050565b60006020820190508181036000830152611629816115ed565b9050919050565b600060608201905061164560008301866111e1565b61165260208301856111e1565b61165f6040830184611127565b949350505050565b60008115159050919050565b61167c81611667565b811461168757600080fd5b50565b60008151905061169981611673565b92915050565b6000602082840312156116b5576116b4611151565b5b60006116c38482850161168a565b91505092915050565b7f5472616e73666572656e6369612066616c6c6964610000000000000000000000600082015250565b6000611702601583611360565b915061170d826116cc565b602082019050919050565b60006020820190508181036000830152611731816116f5565b9050919050565b600060408201905061174d6000830185611127565b61175a6020830184611127565b9392505050565b600061176c8261111d565b91506117778361111d565b925082820390508181111561178f5761178e61153b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006117cf8261111d565b91506117da8361111d565b92508282026117e88161111d565b915082820484148315176117ff576117fe61153b565b5b5092915050565b60006118118261111d565b915061181c8361111d565b92508261182c5761182b611449565b5b828204905092915050565b7f4c612063616e74696461642061207472616e666572697220646562652073657260008201527f206d61796f722061206365726f00000000000000000000000000000000000000602082015250565b6000611893602d83611360565b915061189e82611837565b604082019050919050565b600060208201905081810360008301526118c281611886565b9050919050565b60006118d4826112d0565b9050919050565b6118e4816118c9565b82525050565b60006040820190506118ff60008301856118db565b61190c6020830184611127565b9392505050565b7f48612066616c6c61646f206c61207472616e666572656e636961000000000000600082015250565b6000611949601a83611360565b915061195482611913565b602082019050919050565b600060208201905081810360008301526119788161193c565b9050919050565b7f446972656363696f6e20696e76616c6964610000000000000000000000000000600082015250565b60006119b5601283611360565b91506119c08261197f565b602082019050919050565b600060208201905081810360008301526119e4816119a8565b9050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6000611a12826119eb565b91506fffffffffffffffffffffffffffffffff8203611a3457611a3361153b565b5b600182019050919050565b7f4469616d6f6e6400000000000000000000000000000000000000000000000000600082015250565b6000611a75600783611360565b9150611a8082611a3f565b602082019050919050565b60006040820190508181036000830152611aa481611a68565b9050611ab36020830184611127565b92915050565b7f456d6572616c6400000000000000000000000000000000000000000000000000600082015250565b6000611aef600783611360565b9150611afa82611ab9565b602082019050919050565b60006040820190508181036000830152611b1e81611ae2565b9050611b2d6020830184611127565b92915050565b7f5275627900000000000000000000000000000000000000000000000000000000600082015250565b6000611b69600483611360565b9150611b7482611b33565b602082019050919050565b60006040820190508181036000830152611b9881611b5c565b9050611ba76020830184611127565b92915050565b7f506561726c000000000000000000000000000000000000000000000000000000600082015250565b6000611be3600583611360565b9150611bee82611bad565b602082019050919050565b60006040820190508181036000830152611c1281611bd6565b9050611c216020830184611127565b9291505056fea2646970667358221220519130e3dae59a867444b1b8d9f32b6ef6b0f0da80555bfc5f73c9666003f7d364736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063d0e30db01161004e578063d0e30db014610147578063d194770514610151578063de36b7751461018e578063fc0c546a146101b757610086565b80638f1803051461008b5780639f8dcfe9146100b6578063aa331db5146100df578063ca55753a1461010a57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a06101e2565b6040516100ad9190611136565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190611182565b61021a565b005b3480156100eb57600080fd5b506100f461066a565b60405161010191906111f0565b60405180910390f35b34801561011657600080fd5b50610131600480360381019061012c9190611237565b610694565b60405161013e9190611136565b60405180910390f35b61014f6106e0565b005b34801561015d57600080fd5b5061017860048036038101906101739190611237565b6106e2565b6040516101859190611136565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190611264565b61072e565b005b3480156101c357600080fd5b506101cc610877565b6040516101d99190611303565b60405180910390f35b6000600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161027391906111f0565b602060405180830381865afa158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b49190611333565b8111156102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed906113bd565b60405180910390fd5b63773594006fffffffffffffffffffffffffffffffff1681101561034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034690611429565b60405180910390fd5b6000633b9aca006fffffffffffffffffffffffffffffffff16826103739190611478565b146103b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103aa9061151b565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000828260010154610408919061156a565b9050640ba43b74006fffffffffffffffffffffffffffffffff16811115610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b90611610565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016104c193929190611630565b6020604051808303816000875af11580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061169f565b610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611718565b60405180910390fd5b82826001016000828254610557919061156a565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1584426040516105a6929190611738565b60405180910390a260006105cb848460020160009054906101000a900460ff1661089b565b9050600081856105db9190611761565b9050610609600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826109a9565b61061333836109a9565b3373ffffffffffffffffffffffffffffffffffffffff167f73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6834260405161065b929190611738565b60405180910390a25050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1661078c5761078b33610acd565b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461086a57600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061086982610d25565b5b6108738161021a565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806004808111156108b1576108b0611795565b5b8360048111156108c4576108c3611795565b5b036108d557601960ff169050610988565b600360048111156108e9576108e8611795565b5b8360048111156108fc576108fb611795565b5b0361090d57601460ff169050610987565b6002600481111561092157610920611795565b5b83600481111561093457610933611795565b5b0361094557600f60ff169050610986565b6001600481111561095957610958611795565b5b83600481111561096c5761096b611795565b5b0361097d57600a60ff169050610985565b600560ff1690505b5b5b5b6064818561099691906117c4565b6109a09190611806565b91505092915050565b600081116109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e3906118a9565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610a479291906118ea565b6020604051808303816000875af1158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a919061169f565b610ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac09061195f565b60405180910390fd5b5050565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b34906119cb565b60405180910390fd5b60405180608001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020016000815260200160006004811115610b8857610b87611795565b5b815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055506040820151816001015560608201518160020160006101000a81548160ff02191690836004811115610c6657610c65611795565b5b02179055509050506002600081819054906101000a90046fffffffffffffffffffffffffffffffff1680929190610c9c90611a07565b91906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550508173ffffffffffffffffffffffffffffffffffffffff167f7f48e4f7f3ef2c63408b16a799b8516cb879c145386aedd51a36938a02a1c28342604051610d199190611136565b60405180910390a25050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506005600360ff1682610dc19190611806565b10158015610e045750600480811115610ddd57610ddc611795565b5b8260020160009054906101000a900460ff166004811115610e0157610e00611795565b5b14155b15610e895760048260020160006101000a81548160ff02191690836004811115610e3157610e30611795565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a842604051610e7c9190611a8b565b60405180910390a2611118565b6004600360ff1682610e9b9190611806565b10158015610edf575060036004811115610eb857610eb7611795565b5b8260020160009054906101000a900460ff166004811115610edc57610edb611795565b5b14155b15610f645760038260020160006101000a81548160ff02191690836004811115610f0c57610f0b611795565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a842604051610f579190611b05565b60405180910390a2611117565b60038060ff1682610f759190611806565b10158015610fb9575060026004811115610f9257610f91611795565b5b8260020160009054906101000a900460ff166004811115610fb657610fb5611795565b5b14155b1561103e5760028260020160006101000a81548160ff02191690836004811115610fe657610fe5611795565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a8426040516110319190611b7f565b60405180910390a2611116565b6002600360ff16826110509190611806565b1015801561109457506001600481111561106d5761106c611795565b5b8260020160009054906101000a900460ff16600481111561109157611090611795565b5b14155b156111155760018260020160006101000a81548160ff021916908360048111156110c1576110c0611795565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a84260405161110c9190611bf9565b60405180910390a25b5b5b5b505050565b6000819050919050565b6111308161111d565b82525050565b600060208201905061114b6000830184611127565b92915050565b600080fd5b61115f8161111d565b811461116a57600080fd5b50565b60008135905061117c81611156565b92915050565b60006020828403121561119857611197611151565b5b60006111a68482850161116d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111da826111af565b9050919050565b6111ea816111cf565b82525050565b600060208201905061120560008301846111e1565b92915050565b611214816111cf565b811461121f57600080fd5b50565b6000813590506112318161120b565b92915050565b60006020828403121561124d5761124c611151565b5b600061125b84828501611222565b91505092915050565b6000806040838503121561127b5761127a611151565b5b600061128985828601611222565b925050602061129a8582860161116d565b9150509250929050565b6000819050919050565b60006112c96112c46112bf846111af565b6112a4565b6111af565b9050919050565b60006112db826112ae565b9050919050565b60006112ed826112d0565b9050919050565b6112fd816112e2565b82525050565b600060208201905061131860008301846112f4565b92915050565b60008151905061132d81611156565b92915050565b60006020828403121561134957611348611151565b5b60006113578482850161131e565b91505092915050565b600082825260208201905092915050565b7f4e6f206375656e74617320636f6e205553445420656e2074752077616c6c6574600082015250565b60006113a7602083611360565b91506113b282611371565b602082019050919050565b600060208201905081810360008301526113d68161139a565b9050919050565b7f4465706f7369746f206d696e696d6f2065732064652032303030205553445400600082015250565b6000611413601f83611360565b915061141e826113dd565b602082019050919050565b6000602082019050818103600083015261144281611406565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114838261111d565b915061148e8361111d565b92508261149e5761149d611449565b5b828206905092915050565b7f536f6c6f207075656465206465706f7369746172206465206d696c20656e206d60008201527f696c000000000000000000000000000000000000000000000000000000000000602082015250565b6000611505602283611360565b9150611510826114a9565b604082019050919050565b60006020820190508181036000830152611534816114f8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115758261111d565b91506115808361111d565b92508282019050808211156115985761159761153b565b5b92915050565b7f48617320616c63616e7a61646f20656c206c696d697465206d6178696f6d6f2060008201527f64652035302c3030302055534454000000000000000000000000000000000000602082015250565b60006115fa602e83611360565b91506116058261159e565b604082019050919050565b60006020820190508181036000830152611629816115ed565b9050919050565b600060608201905061164560008301866111e1565b61165260208301856111e1565b61165f6040830184611127565b949350505050565b60008115159050919050565b61167c81611667565b811461168757600080fd5b50565b60008151905061169981611673565b92915050565b6000602082840312156116b5576116b4611151565b5b60006116c38482850161168a565b91505092915050565b7f5472616e73666572656e6369612066616c6c6964610000000000000000000000600082015250565b6000611702601583611360565b915061170d826116cc565b602082019050919050565b60006020820190508181036000830152611731816116f5565b9050919050565b600060408201905061174d6000830185611127565b61175a6020830184611127565b9392505050565b600061176c8261111d565b91506117778361111d565b925082820390508181111561178f5761178e61153b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006117cf8261111d565b91506117da8361111d565b92508282026117e88161111d565b915082820484148315176117ff576117fe61153b565b5b5092915050565b60006118118261111d565b915061181c8361111d565b92508261182c5761182b611449565b5b828204905092915050565b7f4c612063616e74696461642061207472616e666572697220646562652073657260008201527f206d61796f722061206365726f00000000000000000000000000000000000000602082015250565b6000611893602d83611360565b915061189e82611837565b604082019050919050565b600060208201905081810360008301526118c281611886565b9050919050565b60006118d4826112d0565b9050919050565b6118e4816118c9565b82525050565b60006040820190506118ff60008301856118db565b61190c6020830184611127565b9392505050565b7f48612066616c6c61646f206c61207472616e666572656e636961000000000000600082015250565b6000611949601a83611360565b915061195482611913565b602082019050919050565b600060208201905081810360008301526119788161193c565b9050919050565b7f446972656363696f6e20696e76616c6964610000000000000000000000000000600082015250565b60006119b5601283611360565b91506119c08261197f565b602082019050919050565b600060208201905081810360008301526119e4816119a8565b9050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6000611a12826119eb565b91506fffffffffffffffffffffffffffffffff8203611a3457611a3361153b565b5b600182019050919050565b7f4469616d6f6e6400000000000000000000000000000000000000000000000000600082015250565b6000611a75600783611360565b9150611a8082611a3f565b602082019050919050565b60006040820190508181036000830152611aa481611a68565b9050611ab36020830184611127565b92915050565b7f456d6572616c6400000000000000000000000000000000000000000000000000600082015250565b6000611aef600783611360565b9150611afa82611ab9565b602082019050919050565b60006040820190508181036000830152611b1e81611ae2565b9050611b2d6020830184611127565b92915050565b7f5275627900000000000000000000000000000000000000000000000000000000600082015250565b6000611b69600483611360565b9150611b7482611b33565b602082019050919050565b60006040820190508181036000830152611b9881611b5c565b9050611ba76020830184611127565b92915050565b7f506561726c000000000000000000000000000000000000000000000000000000600082015250565b6000611be3600583611360565b9150611bee82611bad565b602082019050919050565b60006040820190508181036000830152611c1281611bd6565b9050611c216020830184611127565b9291505056fea2646970667358221220519130e3dae59a867444b1b8d9f32b6ef6b0f0da80555bfc5f73c9666003f7d364736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 85,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_businessWallet",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 87,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_totalMembers",
        "offset": 0,
        "slot": "2",
        "type": "t_uint128"
      },
      {
        "astId": 147,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "members",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Member)142_storage)"
      },
      {
        "astId": 152,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "enrolled",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(Ranks)132": {
        "encoding": "inplace",
        "label": "enum FFFBusiness.Ranks",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Member)142_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FFFBusiness.Member)",
        "numberOfBytes": "32",
        "value": "t_struct(Member)142_storage"
      },
      "t_struct(Member)142_storage": {
        "encoding": "inplace",
        "label": "struct FFFBusiness.Member",
        "members": [
          {
            "astId": 134,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "memberWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 136,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "isActive",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 138,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 141,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "rank",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(Ranks)132"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}