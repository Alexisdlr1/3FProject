{
  "address": "0xa076ECA5a4751496AC055Eb31151DAE50cA9EB79",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mainWallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldBusinessWallet",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newBusinessWallet",
          "type": "address"
        }
      ],
      "name": "BusinessWalletSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "rank",
          "type": "string"
        }
      ],
      "name": "NewRankReached",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Refund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalRequest",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "addReferralToUpline",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newBusinessWallet",
          "type": "address"
        }
      ],
      "name": "changeBusinessWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositMemeberFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBusinessWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentMember",
          "type": "address"
        }
      ],
      "name": "getMemberBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_memberAddress",
          "type": "address"
        }
      ],
      "name": "getMemberDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum FFFBusiness.Ranks",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "memberWallet",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "enum FFFBusiness.Ranks",
              "name": "rank",
              "type": "uint8"
            }
          ],
          "internalType": "struct FFFBusiness.Member",
          "name": "member",
          "type": "tuple"
        }
      ],
      "name": "getMemberDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum FFFBusiness.Ranks",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalActiveMembers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalMembers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCurrentlyActiveUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uplineAddress",
          "type": "address"
        }
      ],
      "name": "memberEntrance",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_memberAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "payToMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_requestedAmount",
          "type": "uint128"
        }
      ],
      "name": "withdrawalRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0d735311e362b3fa6f1cfe516b4392e7406d05f03350421e8c80926b3328fd52",
  "receipt": {
    "to": null,
    "from": "0x2C286498a497dA07cAa975ad435b0fD047F7C6aE",
    "contractAddress": "0xa076ECA5a4751496AC055Eb31151DAE50cA9EB79",
    "transactionIndex": 29,
    "gasUsed": "2293423",
    "logsBloom": "0x
    "blockHash": "0xb4d4433f304e57f53de9d39223af222d70115c4fcd2702568091c5a9daccd170",
    "transactionHash": "0x0d735311e362b3fa6f1cfe516b4392e7406d05f03350421e8c80926b3328fd52",
    "logs": [
      {
        "transactionIndex": 29,
        "blockNumber": 6759135,
        "transactionHash": "0x0d735311e362b3fa6f1cfe516b4392e7406d05f03350421e8c80926b3328fd52",
        "address": "0xa076ECA5a4751496AC055Eb31151DAE50cA9EB79",
        "topics": [
          "0x4b123934a809d62411dc417216bcde9b7e897269d64cb12c29fd71726e0dedd1",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002c286498a497da07caa975ad435b0fd047f7c6ae"
        ],
        "data": "0x",
        "logIndex": 62,
        "blockHash": "0xb4d4433f304e57f53de9d39223af222d70115c4fcd2702568091c5a9daccd170"
      },
      {
        "transactionIndex": 29,
        "blockNumber": 6759135,
        "transactionHash": "0x0d735311e362b3fa6f1cfe516b4392e7406d05f03350421e8c80926b3328fd52",
        "address": "0xa076ECA5a4751496AC055Eb31151DAE50cA9EB79",
        "topics": [
          "0xb4dcb6dd550f27b5917ebf674899ea7046ff91790c6f9f01431617ad39819db2",
          "0x0000000000000000000000002c286498a497da07caa975ad435b0fd047f7c6ae"
        ],
        "data": "0x",
        "logIndex": 63,
        "blockHash": "0xb4d4433f304e57f53de9d39223af222d70115c4fcd2702568091c5a9daccd170"
      }
    ],
    "blockNumber": 6759135,
    "cumulativeGasUsed": "11722682",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2C286498a497dA07cAa975ad435b0fD047F7C6aE"
  ],
  "numDeployments": 1,
  "solcInputHash": "469dcaae094d7e62a5b09e7c898fc3b2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mainWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldBusinessWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBusinessWallet\",\"type\":\"address\"}],\"name\":\"BusinessWalletSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"NewMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"rank\",\"type\":\"string\"}],\"name\":\"NewRankReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalRequest\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"addReferralToUpline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBusinessWallet\",\"type\":\"address\"}],\"name\":\"changeBusinessWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositMemeberFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBusinessWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentMember\",\"type\":\"address\"}],\"name\":\"getMemberBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_memberAddress\",\"type\":\"address\"}],\"name\":\"getMemberDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum FFFBusiness.Ranks\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"memberWallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"enum FFFBusiness.Ranks\",\"name\":\"rank\",\"type\":\"uint8\"}],\"internalType\":\"struct FFFBusiness.Member\",\"name\":\"member\",\"type\":\"tuple\"}],\"name\":\"getMemberDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum FFFBusiness.Ranks\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalActiveMembers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMembers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCurrentlyActiveUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uplineAddress\",\"type\":\"address\"}],\"name\":\"memberEntrance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_memberAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"payToMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_requestedAmount\",\"type\":\"uint128\"}],\"name\":\"withdrawalRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FFFBusiness.sol\":\"FFFBusiness\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FFFBusiness.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.2 <0.9.0;\\n\\ncontract FFFBusiness {\\n    address payable private _businessWallet;\\n    uint128 private _totalMembers;\\n    uint128 private _totalActiveMembers;\\n\\n    uint128 private _minAmountToTransfer = 10000000000000000;  // Currently is a wei unit (0.01 Ether)\\n    uint8 constant private _MAX_TICKETS = 3; // NOTE: this feature remains to be seen\\n    \\n    uint8 private _refundTierOne = 5;\\n    uint8 private _refundTierTwo = 10;\\n    uint8 private _refundTierThree = 15;\\n    uint8 private _refundTierFour = 20;\\n    uint8 private _refundTierFive = 25;\\n\\n    uint8 private _qualifyToImproveRank = 3; // NOTE: this feature remains to be seen\\n\\n    enum Ranks {\\n        Sapphire,   // 0\\n        Pearl,      // 1\\n        Ruby,       // 2\\n        Emerald,    // 3\\n        Diamond     // 4\\n    }\\n\\n    struct Member {\\n        address payable memberWallet;\\n        bool isActive;\\n        uint balance;\\n        Ranks rank;\\n    }\\n\\n    struct WithdrawTicket {\\n        address payable to;\\n        uint128 requestedAmount;\\n        uint32 requestDate;\\n        bool isPaid;\\n    }\\n\\n    mapping(address => Member) private members;\\n    mapping(address => address[]) private enrolled;\\n    mapping(address => WithdrawTicket[]) private withdrawals; // NOTE: this feature remains to be seen\\n\\n    modifier onlyBusiness() {\\n        require(msg.sender == _businessWallet, \\\"Error: Not the business\\\");\\n        _;\\n    }\\n\\n    modifier onlyActiveMember() {\\n        require(members[msg.sender].isActive, \\\"Member not active\\\");\\n        _;\\n    }\\n\\n    modifier onlyActiveMemberStruct(Member memory _currentMember){\\n        require(_currentMember.isActive, \\\"Member not active\\\");\\n        _;\\n    }\\n\\n    modifier onlyActiveMemberAddress(address _currentMember){\\n        require(members[_currentMember].isActive, \\\"Member not active\\\");\\n        _;\\n    }\\n\\n    modifier checkMemberBalance(uint _amount) {\\n        require(members[msg.sender].balance >= _amount, \\\"Insufficient balance\\\");\\n        _;\\n    }\\n\\n    modifier checkMemberBalanceStruct(Member memory _currentMember, uint _amount) {\\n        require(_currentMember.balance >= _amount, \\\"Insufficient balance\\\");\\n        _;\\n    }\\n\\n    modifier checkContractBalance(uint _amount) {\\n        require(address(this).balance >= _amount, \\\"The contract doesn't have sufficient balance\\\");\\n        _;\\n    }\\n\\n    modifier checkValidAddress(address _recipient) {\\n        require(_recipient != address(0), \\\"Invalid address\\\");\\n        _;\\n    }\\n\\n    modifier checkMinimumAmount() {\\n        require(msg.value >= _minAmountToTransfer, \\\"Minimum amount is 0.01 Ethers\\\");\\n        _;\\n    }\\n\\n    modifier preventZeroAmount(uint _currentAmount) {\\n        require(_currentAmount > 0, \\\"The amount must be greater than zero\\\");\\n        _;\\n    }\\n\\n    event Deposit(address indexed from, uint amount);\\n    event Transfer(address indexed from, address indexed to, uint amount);\\n    event WithdrawalRequest(address indexed to, uint amount);\\n    event Refund(address indexed to, uint amount);\\n    \\n    event BusinessWalletSet(address indexed oldBusinessWallet, address indexed newBusinessWallet);\\n    event NewMember(address indexed member);\\n    event NewRankReached(address indexed member, string rank);\\n\\n    constructor(address _mainWallet) {\\n        // NOTE: modify constructor only for test deploy\\n        // _businessWallet = payable(msg.sender);\\n        _businessWallet = payable(_mainWallet);\\n        _totalMembers = 0;\\n        _totalActiveMembers = 0;\\n        emit BusinessWalletSet(address(0), _businessWallet);\\n        createMember(_businessWallet);\\n    }\\n\\n    function deposit() public payable {}\\n\\n    function getTotalMembers() public view returns (uint) {\\n        return _totalMembers;\\n    }\\n\\n    function getTotalActiveMembers() public view returns (uint) {\\n        return _totalActiveMembers;\\n    }\\n\\n    function getBusinessWallet() public view returns (address) {\\n        return _businessWallet;\\n    }\\n\\n    function changeBusinessWallet(address _newBusinessWallet) public onlyBusiness {\\n        emit BusinessWalletSet(_businessWallet, _newBusinessWallet);\\n        _businessWallet = payable(_newBusinessWallet);\\n    }\\n\\n    function getMemberBalance(address _currentMember) \\n        public\\n        view\\n        onlyActiveMemberAddress(_currentMember)\\n        returns(uint)\\n    {\\n        return members[_currentMember].balance;\\n    }\\n\\n    function getMemberDetails(Member memory member)\\n        public\\n        pure\\n        returns (\\n            address, \\n            bool,\\n            uint,\\n            Ranks\\n        ) \\n    {\\n        require(member.isActive, \\\"Member not registered\\\");\\n\\n        return (\\n            member.memberWallet,\\n            member.isActive,\\n            member.balance,\\n            member.rank\\n        );\\n    }\\n\\n    function getMemberDetails(address _memberAddress)\\n        public\\n        view\\n        returns (\\n            address, \\n            bool,\\n            uint,\\n            Ranks\\n        ) \\n    {\\n        Member memory member = members[_memberAddress];\\n        require(member.isActive, \\\"Member not registered\\\");\\n\\n        return (\\n            member.memberWallet,\\n            member.isActive,\\n            member.balance,\\n            member.rank\\n        );\\n    }\\n\\n    function addReferralToUpline(address _to, address _from)\\n        public\\n        onlyActiveMemberAddress(_to)\\n        checkValidAddress(_to)\\n    {\\n        enrolled[_to].push(_from);\\n        Member storage member = members[_to];\\n        updateReferralRank(member, _to);\\n    }\\n\\n    function memberEntrance(address _uplineAddress) \\n        public\\n        payable\\n        checkMinimumAmount\\n    {\\n\\n        if (!members[msg.sender].isActive) createMember(payable(msg.sender));\\n\\n        if (_uplineAddress != address(0)) addReferralToUpline(_uplineAddress, msg.sender);\\n\\n        depositMemeberFunds();\\n    }\\n\\n    // NOTE: This is a provisional function for active members\\n    function depositMemeberFunds()\\n        public\\n        payable\\n        checkMinimumAmount\\n    {\\n        Member storage member = members[msg.sender];\\n        member.balance += msg.value;\\n        emit Deposit(msg.sender, msg.value);\\n\\n        uint8 refundPercentToMember = _getRefundPerRank(member);\\n\\n        uint refundToMember = _getRefundAmount(msg.value, refundPercentToMember);\\n        uint refundToBusiness = msg.value - refundToMember;\\n        require(refundToBusiness >= refundToMember, \\\"Failed transaction\\\");\\n\\n        _payment(_businessWallet, refundToBusiness);\\n        _payment(payable(msg.sender), refundToMember);\\n        emit Refund(msg.sender, refundToMember);\\n    }\\n\\n    // NOTE: this feature remains to be seen\\n    function withdrawalRequest(uint128 _requestedAmount)\\n        public\\n        preventZeroAmount(_requestedAmount)\\n    {\\n        Member memory currentMember = members[msg.sender];\\n        require(currentMember.isActive, \\\"Member not active\\\");\\n        require(currentMember.balance >= _requestedAmount, \\\"Insufficient balance\\\");\\n        require(withdrawals[msg.sender].length <= _MAX_TICKETS, \\\"Error can't request more than 5 withdrawals\\\");\\n\\n        WithdrawTicket memory currentTicket = WithdrawTicket({\\n            to: payable(msg.sender),\\n            requestedAmount: _requestedAmount,\\n            requestDate: uint32(block.timestamp),\\n            isPaid: false\\n        });\\n        withdrawals[msg.sender].push(currentTicket);\\n        emit WithdrawalRequest(msg.sender, _requestedAmount);\\n    }\\n\\n    function payToMember(address _memberAddress, uint _amount)\\n        public\\n        onlyBusiness\\n        preventZeroAmount(_amount)\\n    {\\n\\n    }\\n\\n    function isCurrentlyActiveUser()\\n        public\\n        view\\n        returns(bool)\\n    {\\n        return members[msg.sender].isActive;\\n    }\\n\\n    function createMember(address payable _newMember)\\n        internal\\n        checkValidAddress(_newMember)\\n    {\\n        \\n        Member storage newMember = members[_newMember];\\n        newMember.memberWallet = _newMember;\\n        newMember.isActive = true;\\n        newMember.balance = 0;\\n        newMember.rank = Ranks.Sapphire;\\n\\n        _totalMembers++;\\n        _totalActiveMembers++;\\n\\n        emit NewMember(_newMember);\\n    }\\n\\n    function _payment(address payable _to, uint _amount)\\n        private\\n        preventZeroAmount(_amount)\\n    {\\n        (bool sent, ) = _to.call{ value: _amount }(\\\"\\\");\\n        require(sent, \\\"Failed transaction\\\");\\n    }\\n\\n    function _getRefundAmount(uint _totalAmount, uint _refundPercent) private pure returns (uint) {\\n        return (_totalAmount * _refundPercent) / 100;\\n    }\\n\\n    function _getRefundPerRank(Member storage member)\\n        private\\n        view\\n        returns (uint8) \\n    {\\n        if (member.rank == Ranks.Diamond) {\\n            return _refundTierFive;\\n        } \\n        if (member.rank == Ranks.Emerald) {\\n            return _refundTierFour;\\n        } \\n        if (member.rank == Ranks.Ruby) {\\n            return _refundTierThree;\\n        } \\n        if (member.rank == Ranks.Pearl) {\\n            return _refundTierTwo;\\n        }\\n\\n        return _refundTierOne;\\n    }\\n\\n    function _setNewRank(\\n        Member storage currentMember,\\n        Ranks newRank,\\n        string memory nameRank\\n        ) private\\n    {\\n        currentMember.rank = newRank;\\n        emit NewRankReached(currentMember.memberWallet, nameRank);\\n    }\\n\\n    function updateReferralRank(\\n        Member storage currentMember,\\n        address _currentMemberAddress\\n        ) private \\n    {\\n        uint qualificationRank = enrolled[_currentMemberAddress].length / _qualifyToImproveRank;\\n\\n        if (qualificationRank == 5 && currentMember.rank != Ranks.Diamond) {\\n            _setNewRank(\\n                currentMember,\\n                Ranks.Diamond,\\n                \\\"Diamond\\\"\\n            );\\n        } else if (qualificationRank == 4 && currentMember.rank != Ranks.Emerald) {\\n            _setNewRank(\\n                currentMember,\\n                Ranks.Emerald,\\n                \\\"Emerald\\\"\\n            );\\n        } else if (qualificationRank == 3 && currentMember.rank != Ranks.Ruby) {\\n            _setNewRank(\\n                currentMember,\\n                Ranks.Ruby,\\n                \\\"Ruby\\\"\\n            );\\n        } else if (qualificationRank == 2 && currentMember.rank != Ranks.Pearl) {\\n            _setNewRank(\\n                currentMember,\\n                Ranks.Pearl,\\n                \\\"Pearl\\\"\\n            );\\n        }\\n    }\\n\\n}\",\"keccak256\":\"0x3c9bc697994a87b59fab9f9d190c0790d1f11867731c38192cceaf81055b181e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80638f1803051161007f578063ac369fca11610059578063ac369fca146102a5578063b7553040146102af578063ca55753a146102d8578063d0e30db014610315576100dd565b80638f18030514610226578063975cff8b14610251578063aa331db51461027a576100dd565b80637dfff343116100bb5780637dfff343146101505780637e5e31a51461017b57806383fd0954146101a657806385650630146101e6576100dd565b806321c6fe9c146100e25780632e473b481461010b5780637892a2bb14610134575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611b46565b61031f565b005b34801561011757600080fd5b50610132600480360381019061012d9190611bce565b6103f6565b005b61014e60048036038101906101499190611bfb565b610858565b005b34801561015c57600080fd5b50610165610973565b6040516101729190611c43565b60405180910390f35b34801561018757600080fd5b506101906109ca565b60405161019d9190611c6d565b60405180910390f35b3480156101b257600080fd5b506101cd60048036038101906101c89190611bfb565b610a02565b6040516101dd9493929190611d0e565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190611eeb565b610b74565b60405161021d9493929190611d0e565b60405180910390f35b34801561023257600080fd5b5061023b610be1565b6040516102489190611c6d565b60405180910390f35b34801561025d57600080fd5b5061027860048036038101906102739190611bfb565b610c19565b005b34801561028657600080fd5b5061028f610d64565b60405161029c9190611f18565b60405180910390f35b6102ad610d8d565b005b3480156102bb57600080fd5b506102d660048036038101906102d19190611f33565b610fa5565b005b3480156102e457600080fd5b506102ff60048036038101906102fa9190611bfb565b611199565b60405161030c9190611c6d565b60405180910390f35b61031d611276565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a490611fd0565b60405180910390fd5b80600081116103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890612062565b60405180910390fd5b505050565b806fffffffffffffffffffffffffffffffff166000811161044c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044390612062565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900460ff16600481111561053857610537611c97565b5b600481111561054a57610549611c97565b5b8152505090508060200151610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b906120ce565b60405180910390fd5b826fffffffffffffffffffffffffffffffff16816040015110156105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e49061213a565b60405180910390fd5b600360ff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501115610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d906121cc565b60405180910390fd5b600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001856fffffffffffffffffffffffffffffffff1681526020014263ffffffff168152602001600015158152509050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060408201518160010160106101000a81548163ffffffff021916908363ffffffff16021790555060608201518160010160146101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f9345a8a944c0bca27038313dd8066210a495ba6374e523065a2e7adcc020ff2b8560405161084a9190612227565b60405180910390a250505050565b600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff163410156108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c29061228e565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff166109295761092833611278565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610968576109678133610fa5565b5b610970610d8d565b50565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16905090565b6000600160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905090565b6000806000806000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900460ff166004811115610af457610af3611c97565b5b6004811115610b0657610b05611c97565b5b8152505090508060200151610b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b47906122fa565b60405180910390fd5b80600001518160200151826040015183606001519450945094509450509193509193565b6000806000808460200151610bbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb5906122fa565b60405180910390fd5b846000015185602001518660400151876060015193509350935093509193509193565b6000600160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ca7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9e90611fd0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f4b123934a809d62411dc417216bcde9b7e897269d64cb12c29fd71726e0dedd160405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16341015610e00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df79061228e565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905034816001016000828254610e579190612349565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c34604051610ea49190611c6d565b60405180910390a26000610eb7826114d4565b90506000610ec8348360ff1661163d565b905060008134610ed8919061237d565b905081811015610f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f14906123fd565b60405180910390fd5b610f4760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261165f565b610f51338361165f565b3373ffffffffffffffffffffffffffffffffffffffff167fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d83604051610f979190611c6d565b60405180910390a250505050565b81600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16611035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102c906120ce565b60405180910390fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109c90612469565b60405180910390fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506111928186611755565b5050505050565b600081600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1661122b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611222906120ce565b60405180910390fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915050919050565b565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112df90612469565b60405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160000160146101000a81548160ff0219169083151502179055506000816001018190555060008160020160006101000a81548160ff021916908360048111156113bd576113bc611c97565b5b02179055506001600081819054906101000a90046fffffffffffffffffffffffffffffffff16809291906113f090612489565b91906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550506001601081819054906101000a90046fffffffffffffffffffffffffffffffff168092919061145590612489565b91906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550508273ffffffffffffffffffffffffffffffffffffffff167fb4dcb6dd550f27b5917ebf674899ea7046ff91790c6f9f01431617ad39819db260405160405180910390a2505050565b60006004808111156114e9576114e8611c97565b5b8260020160009054906101000a900460ff16600481111561150d5761150c611c97565b5b0361152957600260149054906101000a900460ff169050611638565b6003600481111561153d5761153c611c97565b5b8260020160009054906101000a900460ff16600481111561156157611560611c97565b5b0361157d57600260139054906101000a900460ff169050611638565b6002600481111561159157611590611c97565b5b8260020160009054906101000a900460ff1660048111156115b5576115b4611c97565b5b036115d157600260129054906101000a900460ff169050611638565b600160048111156115e5576115e4611c97565b5b8260020160009054906101000a900460ff16600481111561160957611608611c97565b5b0361162557600260119054906101000a900460ff169050611638565b600260109054906101000a900460ff1690505b919050565b60006064828461164d91906124c1565b6116579190612532565b905092915050565b80600081116116a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169a90612062565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff16836040516116c990612594565b60006040518083038185875af1925050503d8060008114611706576040519150601f19603f3d011682016040523d82523d6000602084013e61170b565b606091505b505090508061174f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611746906123fd565b60405180910390fd5b50505050565b6000600260159054906101000a900460ff1660ff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506117b79190612532565b90506005811480156117fe57506004808111156117d7576117d6611c97565b5b8360020160009054906101000a900460ff1660048111156117fb576117fa611c97565b5b14155b15611849576118448360046040518060400160405280600781526020017f4469616d6f6e6400000000000000000000000000000000000000000000000000815250611a00565b6119fb565b60048114801561188f57506003600481111561186857611867611c97565b5b8360020160009054906101000a900460ff16600481111561188c5761188b611c97565b5b14155b156118da576118d58360036040518060400160405280600781526020017f456d6572616c6400000000000000000000000000000000000000000000000000815250611a00565b6119fa565b6003811480156119205750600260048111156118f9576118f8611c97565b5b8360020160009054906101000a900460ff16600481111561191d5761191c611c97565b5b14155b1561196b576119668360026040518060400160405280600481526020017f5275627900000000000000000000000000000000000000000000000000000000815250611a00565b6119f9565b6002811480156119b157506001600481111561198a57611989611c97565b5b8360020160009054906101000a900460ff1660048111156119ae576119ad611c97565b5b14155b156119f8576119f78360016040518060400160405280600581526020017f506561726c000000000000000000000000000000000000000000000000000000815250611a00565b5b5b5b5b505050565b818360020160006101000a81548160ff02191690836004811115611a2757611a26611c97565b5b02179055508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f529ce66ba5901f0df7b3afac6e67a3aa3ffd36294e43c06aa8b7b0bdce33dbc282604051611a969190612617565b60405180910390a2505050565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611add82611ab2565b9050919050565b611aed81611ad2565b8114611af857600080fd5b50565b600081359050611b0a81611ae4565b92915050565b6000819050919050565b611b2381611b10565b8114611b2e57600080fd5b50565b600081359050611b4081611b1a565b92915050565b60008060408385031215611b5d57611b5c611aad565b5b6000611b6b85828601611afb565b9250506020611b7c85828601611b31565b9150509250929050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611bab81611b86565b8114611bb657600080fd5b50565b600081359050611bc881611ba2565b92915050565b600060208284031215611be457611be3611aad565b5b6000611bf284828501611bb9565b91505092915050565b600060208284031215611c1157611c10611aad565b5b6000611c1f84828501611afb565b91505092915050565b60008115159050919050565b611c3d81611c28565b82525050565b6000602082019050611c586000830184611c34565b92915050565b611c6781611b10565b82525050565b6000602082019050611c826000830184611c5e565b92915050565b611c9181611ad2565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110611cd757611cd6611c97565b5b50565b6000819050611ce882611cc6565b919050565b6000611cf882611cda565b9050919050565b611d0881611ced565b82525050565b6000608082019050611d236000830187611c88565b611d306020830186611c34565b611d3d6040830185611c5e565b611d4a6060830184611cff565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611da182611d58565b810181811067ffffffffffffffff82111715611dc057611dbf611d69565b5b80604052505050565b6000611dd3611aa3565b9050611ddf8282611d98565b919050565b6000611def82611ab2565b9050919050565b611dff81611de4565b8114611e0a57600080fd5b50565b600081359050611e1c81611df6565b92915050565b611e2b81611c28565b8114611e3657600080fd5b50565b600081359050611e4881611e22565b92915050565b60058110611e5b57600080fd5b50565b600081359050611e6d81611e4e565b92915050565b600060808284031215611e8957611e88611d53565b5b611e936080611dc9565b90506000611ea384828501611e0d565b6000830152506020611eb784828501611e39565b6020830152506040611ecb84828501611b31565b6040830152506060611edf84828501611e5e565b60608301525092915050565b600060808284031215611f0157611f00611aad565b5b6000611f0f84828501611e73565b91505092915050565b6000602082019050611f2d6000830184611c88565b92915050565b60008060408385031215611f4a57611f49611aad565b5b6000611f5885828601611afb565b9250506020611f6985828601611afb565b9150509250929050565b600082825260208201905092915050565b7f4572726f723a204e6f742074686520627573696e657373000000000000000000600082015250565b6000611fba601783611f73565b9150611fc582611f84565b602082019050919050565b60006020820190508181036000830152611fe981611fad565b9050919050565b7f54686520616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b600061204c602483611f73565b915061205782611ff0565b604082019050919050565b6000602082019050818103600083015261207b8161203f565b9050919050565b7f4d656d626572206e6f7420616374697665000000000000000000000000000000600082015250565b60006120b8601183611f73565b91506120c382612082565b602082019050919050565b600060208201905081810360008301526120e7816120ab565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000612124601483611f73565b915061212f826120ee565b602082019050919050565b6000602082019050818103600083015261215381612117565b9050919050565b7f4572726f722063616e27742072657175657374206d6f7265207468616e20352060008201527f7769746864726177616c73000000000000000000000000000000000000000000602082015250565b60006121b6602b83611f73565b91506121c18261215a565b604082019050919050565b600060208201905081810360008301526121e5816121a9565b9050919050565b6000819050919050565b600061221161220c61220784611b86565b6121ec565b611b10565b9050919050565b612221816121f6565b82525050565b600060208201905061223c6000830184612218565b92915050565b7f4d696e696d756d20616d6f756e7420697320302e303120457468657273000000600082015250565b6000612278601d83611f73565b915061228382612242565b602082019050919050565b600060208201905081810360008301526122a78161226b565b9050919050565b7f4d656d626572206e6f7420726567697374657265640000000000000000000000600082015250565b60006122e4601583611f73565b91506122ef826122ae565b602082019050919050565b60006020820190508181036000830152612313816122d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061235482611b10565b915061235f83611b10565b92508282019050808211156123775761237661231a565b5b92915050565b600061238882611b10565b915061239383611b10565b92508282039050818111156123ab576123aa61231a565b5b92915050565b7f4661696c6564207472616e73616374696f6e0000000000000000000000000000600082015250565b60006123e7601283611f73565b91506123f2826123b1565b602082019050919050565b60006020820190508181036000830152612416816123da565b9050919050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000612453600f83611f73565b915061245e8261241d565b602082019050919050565b6000602082019050818103600083015261248281612446565b9050919050565b600061249482611b86565b91506fffffffffffffffffffffffffffffffff82036124b6576124b561231a565b5b600182019050919050565b60006124cc82611b10565b91506124d783611b10565b92508282026124e581611b10565b915082820484148315176124fc576124fb61231a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061253d82611b10565b915061254883611b10565b92508261255857612557612503565b5b828204905092915050565b600081905092915050565b50565b600061257e600083612563565b91506125898261256e565b600082019050919050565b600061259f82612571565b9150819050919050565b600081519050919050565b60005b838110156125d25780820151818401526020810190506125b7565b60008484015250505050565b60006125e9826125a9565b6125f38185611f73565b93506126038185602086016125b4565b61260c81611d58565b840191505092915050565b6000602082019050818103600083015261263181846125de565b90509291505056fea264697066735822122072c06f712c03ef046edff4332f037bb39dd2e5cab0d206241ff76f33e59d122764736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_businessWallet",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 5,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_totalMembers",
        "offset": 0,
        "slot": "1",
        "type": "t_uint128"
      },
      {
        "astId": 7,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_totalActiveMembers",
        "offset": 16,
        "slot": "1",
        "type": "t_uint128"
      },
      {
        "astId": 10,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_minAmountToTransfer",
        "offset": 0,
        "slot": "2",
        "type": "t_uint128"
      },
      {
        "astId": 16,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_refundTierOne",
        "offset": 16,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 19,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_refundTierTwo",
        "offset": 17,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 22,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_refundTierThree",
        "offset": 18,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 25,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_refundTierFour",
        "offset": 19,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 28,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_refundTierFive",
        "offset": 20,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 31,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_qualifyToImproveRank",
        "offset": 21,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 61,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "members",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Member)47_storage)"
      },
      {
        "astId": 66,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "enrolled",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 72,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "withdrawals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_struct(WithdrawTicket)56_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(WithdrawTicket)56_storage)dyn_storage": {
        "base": "t_struct(WithdrawTicket)56_storage",
        "encoding": "dynamic_array",
        "label": "struct FFFBusiness.WithdrawTicket[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(Ranks)37": {
        "encoding": "inplace",
        "label": "enum FFFBusiness.Ranks",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(WithdrawTicket)56_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FFFBusiness.WithdrawTicket[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(WithdrawTicket)56_storage)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Member)47_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FFFBusiness.Member)",
        "numberOfBytes": "32",
        "value": "t_struct(Member)47_storage"
      },
      "t_struct(Member)47_storage": {
        "encoding": "inplace",
        "label": "struct FFFBusiness.Member",
        "members": [
          {
            "astId": 39,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "memberWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 41,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "isActive",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 43,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 46,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "rank",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(Ranks)37"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(WithdrawTicket)56_storage": {
        "encoding": "inplace",
        "label": "struct FFFBusiness.WithdrawTicket",
        "members": [
          {
            "astId": 49,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "to",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 51,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "requestedAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint128"
          },
          {
            "astId": 53,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "requestDate",
            "offset": 16,
            "slot": "1",
            "type": "t_uint32"
          },
          {
            "astId": 55,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "isPaid",
            "offset": 20,
            "slot": "1",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}