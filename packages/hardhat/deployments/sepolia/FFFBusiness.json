{
  "address": "0x0CC3E5D20216dfAC53105F58909cbFeaf8E4a89e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "rank",
          "type": "string"
        }
      ],
      "name": "NewRankReached",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Refund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalRequest",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositMemeberFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBusinessWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentMember",
          "type": "address"
        }
      ],
      "name": "getMemberBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentMember",
          "type": "address"
        }
      ],
      "name": "getTotalAffiliatesPerMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalMembers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uplineAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "memberEntrance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5a98c13e22f57c9f8a8247d3b67395efd35dfc7697ac43c12c78d49bbe556b35",
  "receipt": {
    "to": null,
    "from": "0x2C286498a497dA07cAa975ad435b0fD047F7C6aE",
    "contractAddress": "0x0CC3E5D20216dfAC53105F58909cbFeaf8E4a89e",
    "transactionIndex": 57,
    "gasUsed": "1703762",
    "logsBloom": "0x
    "blockHash": "0x923b14fc739ce93b035a9b17c0037d6bce05aa05ae67669211b8a74144c3e0bc",
    "transactionHash": "0x5a98c13e22f57c9f8a8247d3b67395efd35dfc7697ac43c12c78d49bbe556b35",
    "logs": [
      {
        "transactionIndex": 57,
        "blockNumber": 6887465,
        "transactionHash": "0x5a98c13e22f57c9f8a8247d3b67395efd35dfc7697ac43c12c78d49bbe556b35",
        "address": "0x0CC3E5D20216dfAC53105F58909cbFeaf8E4a89e",
        "topics": [
          "0xb4dcb6dd550f27b5917ebf674899ea7046ff91790c6f9f01431617ad39819db2",
          "0x0000000000000000000000002c286498a497da07caa975ad435b0fd047f7c6ae"
        ],
        "data": "0x",
        "logIndex": 66,
        "blockHash": "0x923b14fc739ce93b035a9b17c0037d6bce05aa05ae67669211b8a74144c3e0bc"
      }
    ],
    "blockNumber": 6887465,
    "cumulativeGasUsed": "7458273",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4B846D9d563D434d275e2d3a532c30B0574DcA2e"
  ],
  "numDeployments": 1,
  "solcInputHash": "8f4d9075968d79c97eb8fda23e36ff36",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"NewMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"rank\",\"type\":\"string\"}],\"name\":\"NewRankReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositMemeberFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBusinessWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentMember\",\"type\":\"address\"}],\"name\":\"getMemberBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentMember\",\"type\":\"address\"}],\"name\":\"getTotalAffiliatesPerMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMembers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uplineAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"memberEntrance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FFFBusiness.sol\":\"FFFBusiness\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/FFFBusiness.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.2 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract FFFBusiness {\\n    IERC20 public token;\\n    address payable private _businessWallet;\\n    uint128 private _totalMembers;\\n\\n   // To modify when contract is changed to USDT\\n    uint128 private constant _MIN_AMOUNT_TO_TRANSFER = 2000 * 10**6; // 2000 USDT\\n    uint128 private constant _MAX_MEMBER_BALANCE = 50000 * 10**6; // 50,000 USDT en ether (31.07 ETH)\\n    uint128 private constant _DEPOSIT_MULTIPLE = 1000 * 10**6; // M\\u00faltiplo de 1000 USDT en ether (0.62 ETH)\\n\\n    uint8 private constant _REFUND_TIER_ONE = 5;\\n    uint8 private constant _REFUND_TIER_TWO = 10;\\n    uint8 private constant _REFUND_TIER_THREE = 15;\\n    uint8 private constant _REFUND_TIER_FOUR = 20;\\n    uint8 private constant _REFUND_TIER_FIVE = 25;\\n\\n    uint8 private constant _QUALIFY_TO_IMPROVE_RANK = 3;\\n\\n    enum Ranks { Sapphire, Pearl, Ruby, Emerald, Diamond }\\n\\n    struct Member {\\n        address payable memberWallet;\\n        bool isActive;\\n        uint balance;\\n        Ranks rank;\\n    }\\n\\n    mapping(address => Member) private members;\\n    mapping(address => address[]) private enrolled;\\n\\n    event Deposit(address indexed from, uint amount);\\n    event Transfer(address indexed from, address indexed to, uint amount);\\n    event WithdrawalRequest(address indexed to, uint amount);\\n    event Refund(address indexed to, uint amount);\\n    event NewMember(address indexed member);\\n    event NewRankReached(address indexed member, string rank);\\n\\n    constructor(address tokenAddress) {\\n        _businessWallet = payable(msg.sender);\\n        token = IERC20(tokenAddress);  \\n        createMember(_businessWallet);\\n    }\\n\\n    modifier onlyActiveMember() {\\n        require(members[msg.sender].isActive, \\\"Miembro no activo\\\");\\n        _;\\n    }\\n\\n    modifier checkValidAddress(address _recipient) {\\n        require(_recipient != address(0), \\\"Direccion invalida\\\");\\n        _;\\n    }\\n\\n    // Only for development\\n    function getBusinessWallet() public view returns (address) {\\n        return _businessWallet;\\n    }\\n\\n    function getTotalMembers() public view returns (uint) {\\n        return _totalMembers;\\n    }\\n    // =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\\n\\n    receive() external payable {}\\n\\n    function deposit() public payable {}\\n\\n    function depositMemeberFunds(uint _amount) public {\\n        require(_amount <= token.balanceOf(msg.sender), \\\"No cuentas con USDT en tu wallet\\\");\\n        require(_amount >= _MIN_AMOUNT_TO_TRANSFER, \\\"Deposito minimo es de 2000 USDT\\\");\\n        require(_amount % _DEPOSIT_MULTIPLE == 0, \\\"Solo puede depositar de mil en mil\\\");\\n\\n        Member storage member = members[msg.sender];\\n        uint newTotalBalance = member.balance + _amount;\\n        require(newTotalBalance <= _MAX_MEMBER_BALANCE, \\\"Has alcanzado el limite maxiomo de 50,000 USDT\\\");\\n\\n        require(token.transferFrom(msg.sender, address(this), _amount), \\\"Transferencia fallida\\\");\\n\\n        member.balance += _amount;\\n        emit Deposit(msg.sender, _amount);\\n\\n        uint refundToMember = _calculateRefund(_amount, member.rank);\\n        uint refundToBusiness = _amount - refundToMember;\\n\\n        _processPayment(_businessWallet, refundToBusiness);\\n        _processPayment(payable(msg.sender), refundToMember);\\n        emit Refund(msg.sender, refundToMember);\\n    }\\n\\n    function memberEntrance(address _uplineAddress, uint _amount) public {\\n        if (!members[msg.sender].isActive) {\\n            createMember(payable(msg.sender));\\n        }\\n        if (_uplineAddress != address(0)) {\\n            enrolled[_uplineAddress].push(msg.sender);\\n            _updateMemberRank(_uplineAddress);\\n        }\\n\\n        depositMemeberFunds(_amount);\\n    }\\n\\n    function getMemberBalance(address _currentMember) public view returns(uint) {\\n        return members[_currentMember].balance;\\n    }\\n\\n    function getTotalAffiliatesPerMember(address _currentMember) public view returns(uint) {\\n        return enrolled[_currentMember].length;\\n    }\\n\\n    function _processPayment(address payable _to, uint _amount) private {\\n        require(_amount > 0, \\\"La cantidad a tranferir debe ser mayor a cero\\\");\\n        require(token.transfer(_to, _amount), \\\"Ha fallado la tranferencia\\\");\\n    }\\n\\n    function _calculateRefund(uint _amount, Ranks _rank) private pure returns (uint) {\\n        uint refundPercent;\\n        if (_rank == Ranks.Diamond) refundPercent = _REFUND_TIER_FIVE;\\n        else if (_rank == Ranks.Emerald) refundPercent = _REFUND_TIER_FOUR;\\n        else if (_rank == Ranks.Ruby) refundPercent = _REFUND_TIER_THREE;\\n        else if (_rank == Ranks.Pearl) refundPercent = _REFUND_TIER_TWO;\\n        else refundPercent = _REFUND_TIER_ONE;\\n\\n        return (_amount * refundPercent) / 100;\\n    }\\n\\n    function _updateMemberRank(address _uplineAddress) private {\\n        Member storage member = members[_uplineAddress];\\n        uint referralCount = enrolled[_uplineAddress].length;\\n\\n        if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 5 && member.rank != Ranks.Diamond) {\\n            member.rank = Ranks.Diamond;\\n            emit NewRankReached(_uplineAddress, \\\"Diamond\\\");\\n        } else if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 4 && member.rank != Ranks.Emerald) {\\n            member.rank = Ranks.Emerald;\\n            emit NewRankReached(_uplineAddress, \\\"Emerald\\\");\\n        } else if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 3 && member.rank != Ranks.Ruby) {\\n            member.rank = Ranks.Ruby;\\n            emit NewRankReached(_uplineAddress, \\\"Ruby\\\");\\n        } else if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 2 && member.rank != Ranks.Pearl) {\\n            member.rank = Ranks.Pearl;\\n            emit NewRankReached(_uplineAddress, \\\"Pearl\\\");\\n        }\\n    }\\n\\n    function createMember(address payable _newMember) internal checkValidAddress(_newMember) {\\n        members[_newMember] = Member({\\n            memberWallet: _newMember,\\n            isActive: true,\\n            balance: 0,\\n            rank: Ranks.Sapphire\\n        });\\n\\n        _totalMembers++;\\n        emit NewMember(_newMember);\\n    }\\n}\\n\",\"keccak256\":\"0x07274efebf98cac96bdd76c13f86b554e172937d8056ddfdec03016275a1151d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063d0e30db01161004e578063d0e30db014610147578063d194770514610151578063de36b7751461018e578063fc0c546a146101b757610086565b80635952dbd41461008b5780638f180305146100b4578063aa331db5146100df578063ca55753a1461010a57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190611141565b6101e2565b005b3480156100c057600080fd5b506100c961062e565b6040516100d6919061117d565b60405180910390f35b3480156100eb57600080fd5b506100f4610666565b60405161010191906111d9565b60405180910390f35b34801561011657600080fd5b50610131600480360381019061012c9190611220565b610690565b60405161013e919061117d565b60405180910390f35b61014f6106dc565b005b34801561015d57600080fd5b5061017860048036038101906101739190611220565b6106de565b604051610185919061117d565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b0919061124d565b61072a565b005b3480156101c357600080fd5b506101cc610873565b6040516101d991906112ec565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161023b91906111d9565b602060405180830381865afa158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c919061131c565b8111156102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b5906113a6565b60405180910390fd5b63773594006fffffffffffffffffffffffffffffffff16811015610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e90611412565b60405180910390fd5b6000633b9aca006fffffffffffffffffffffffffffffffff168261033b9190611461565b1461037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037290611504565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008282600101546103d09190611553565b9050640ba43b74006fffffffffffffffffffffffffffffffff1681111561042c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610423906115f9565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161048993929190611619565b6020604051808303816000875af11580156104a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cc9190611688565b61050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050290611701565b60405180910390fd5b8282600101600082825461051f9190611553565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c8460405161056c919061117d565b60405180910390a26000610591848460020160009054906101000a900460ff16610897565b9050600081856105a19190611721565b90506105cf600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826109a5565b6105d933836109a5565b3373ffffffffffffffffffffffffffffffffffffffff167fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d8360405161061f919061117d565b60405180910390a25050505050565b6000600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff166107885761078733610ac9565b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461086657600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061086582610d16565b5b61086f816101e2565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806004808111156108ad576108ac611755565b5b8360048111156108c0576108bf611755565b5b036108d157601960ff169050610984565b600360048111156108e5576108e4611755565b5b8360048111156108f8576108f7611755565b5b0361090957601460ff169050610983565b6002600481111561091d5761091c611755565b5b8360048111156109305761092f611755565b5b0361094157600f60ff169050610982565b6001600481111561095557610954611755565b5b83600481111561096857610967611755565b5b0361097957600a60ff169050610981565b600560ff1690505b5b5b5b606481856109929190611784565b61099c91906117c6565b91505092915050565b600081116109e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109df90611869565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610a439291906118aa565b6020604051808303816000875af1158015610a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a869190611688565b610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc9061191f565b60405180910390fd5b5050565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b309061198b565b60405180910390fd5b60405180608001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020016000815260200160006004811115610b8457610b83611755565b5b815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055506040820151816001015560608201518160020160006101000a81548160ff02191690836004811115610c6257610c61611755565b5b02179055509050506002600081819054906101000a90046fffffffffffffffffffffffffffffffff1680929190610c98906119c7565b91906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550508173ffffffffffffffffffffffffffffffffffffffff167fb4dcb6dd550f27b5917ebf674899ea7046ff91790c6f9f01431617ad39819db260405160405180910390a25050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506005600360ff1682610db291906117c6565b10158015610df55750600480811115610dce57610dcd611755565b5b8260020160009054906101000a900460ff166004811115610df257610df1611755565b5b14155b15610e785760048260020160006101000a81548160ff02191690836004811115610e2257610e21611755565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167f529ce66ba5901f0df7b3afac6e67a3aa3ffd36294e43c06aa8b7b0bdce33dbc2604051610e6b90611a4b565b60405180910390a2611101565b6004600360ff1682610e8a91906117c6565b10158015610ece575060036004811115610ea757610ea6611755565b5b8260020160009054906101000a900460ff166004811115610ecb57610eca611755565b5b14155b15610f515760038260020160006101000a81548160ff02191690836004811115610efb57610efa611755565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167f529ce66ba5901f0df7b3afac6e67a3aa3ffd36294e43c06aa8b7b0bdce33dbc2604051610f4490611ab7565b60405180910390a2611100565b60038060ff1682610f6291906117c6565b10158015610fa6575060026004811115610f7f57610f7e611755565b5b8260020160009054906101000a900460ff166004811115610fa357610fa2611755565b5b14155b156110295760028260020160006101000a81548160ff02191690836004811115610fd357610fd2611755565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167f529ce66ba5901f0df7b3afac6e67a3aa3ffd36294e43c06aa8b7b0bdce33dbc260405161101c90611b23565b60405180910390a26110ff565b6002600360ff168261103b91906117c6565b1015801561107f57506001600481111561105857611057611755565b5b8260020160009054906101000a900460ff16600481111561107c5761107b611755565b5b14155b156110fe5760018260020160006101000a81548160ff021916908360048111156110ac576110ab611755565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167f529ce66ba5901f0df7b3afac6e67a3aa3ffd36294e43c06aa8b7b0bdce33dbc26040516110f590611b8f565b60405180910390a25b5b5b5b505050565b600080fd5b6000819050919050565b61111e8161110b565b811461112957600080fd5b50565b60008135905061113b81611115565b92915050565b60006020828403121561115757611156611106565b5b60006111658482850161112c565b91505092915050565b6111778161110b565b82525050565b6000602082019050611192600083018461116e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111c382611198565b9050919050565b6111d3816111b8565b82525050565b60006020820190506111ee60008301846111ca565b92915050565b6111fd816111b8565b811461120857600080fd5b50565b60008135905061121a816111f4565b92915050565b60006020828403121561123657611235611106565b5b60006112448482850161120b565b91505092915050565b6000806040838503121561126457611263611106565b5b60006112728582860161120b565b92505060206112838582860161112c565b9150509250929050565b6000819050919050565b60006112b26112ad6112a884611198565b61128d565b611198565b9050919050565b60006112c482611297565b9050919050565b60006112d6826112b9565b9050919050565b6112e6816112cb565b82525050565b600060208201905061130160008301846112dd565b92915050565b60008151905061131681611115565b92915050565b60006020828403121561133257611331611106565b5b600061134084828501611307565b91505092915050565b600082825260208201905092915050565b7f4e6f206375656e74617320636f6e205553445420656e2074752077616c6c6574600082015250565b6000611390602083611349565b915061139b8261135a565b602082019050919050565b600060208201905081810360008301526113bf81611383565b9050919050565b7f4465706f7369746f206d696e696d6f2065732064652032303030205553445400600082015250565b60006113fc601f83611349565b9150611407826113c6565b602082019050919050565b6000602082019050818103600083015261142b816113ef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061146c8261110b565b91506114778361110b565b92508261148757611486611432565b5b828206905092915050565b7f536f6c6f207075656465206465706f7369746172206465206d696c20656e206d60008201527f696c000000000000000000000000000000000000000000000000000000000000602082015250565b60006114ee602283611349565b91506114f982611492565b604082019050919050565b6000602082019050818103600083015261151d816114e1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061155e8261110b565b91506115698361110b565b925082820190508082111561158157611580611524565b5b92915050565b7f48617320616c63616e7a61646f20656c206c696d697465206d6178696f6d6f2060008201527f64652035302c3030302055534454000000000000000000000000000000000000602082015250565b60006115e3602e83611349565b91506115ee82611587565b604082019050919050565b60006020820190508181036000830152611612816115d6565b9050919050565b600060608201905061162e60008301866111ca565b61163b60208301856111ca565b611648604083018461116e565b949350505050565b60008115159050919050565b61166581611650565b811461167057600080fd5b50565b6000815190506116828161165c565b92915050565b60006020828403121561169e5761169d611106565b5b60006116ac84828501611673565b91505092915050565b7f5472616e73666572656e6369612066616c6c6964610000000000000000000000600082015250565b60006116eb601583611349565b91506116f6826116b5565b602082019050919050565b6000602082019050818103600083015261171a816116de565b9050919050565b600061172c8261110b565b91506117378361110b565b925082820390508181111561174f5761174e611524565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600061178f8261110b565b915061179a8361110b565b92508282026117a88161110b565b915082820484148315176117bf576117be611524565b5b5092915050565b60006117d18261110b565b91506117dc8361110b565b9250826117ec576117eb611432565b5b828204905092915050565b7f4c612063616e74696461642061207472616e666572697220646562652073657260008201527f206d61796f722061206365726f00000000000000000000000000000000000000602082015250565b6000611853602d83611349565b915061185e826117f7565b604082019050919050565b6000602082019050818103600083015261188281611846565b9050919050565b6000611894826112b9565b9050919050565b6118a481611889565b82525050565b60006040820190506118bf600083018561189b565b6118cc602083018461116e565b9392505050565b7f48612066616c6c61646f206c61207472616e666572656e636961000000000000600082015250565b6000611909601a83611349565b9150611914826118d3565b602082019050919050565b60006020820190508181036000830152611938816118fc565b9050919050565b7f446972656363696f6e20696e76616c6964610000000000000000000000000000600082015250565b6000611975601283611349565b91506119808261193f565b602082019050919050565b600060208201905081810360008301526119a481611968565b9050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b60006119d2826119ab565b91506fffffffffffffffffffffffffffffffff82036119f4576119f3611524565b5b600182019050919050565b7f4469616d6f6e6400000000000000000000000000000000000000000000000000600082015250565b6000611a35600783611349565b9150611a40826119ff565b602082019050919050565b60006020820190508181036000830152611a6481611a28565b9050919050565b7f456d6572616c6400000000000000000000000000000000000000000000000000600082015250565b6000611aa1600783611349565b9150611aac82611a6b565b602082019050919050565b60006020820190508181036000830152611ad081611a94565b9050919050565b7f5275627900000000000000000000000000000000000000000000000000000000600082015250565b6000611b0d600483611349565b9150611b1882611ad7565b602082019050919050565b60006020820190508181036000830152611b3c81611b00565b9050919050565b7f506561726c000000000000000000000000000000000000000000000000000000600082015250565b6000611b79600583611349565b9150611b8482611b43565b602082019050919050565b60006020820190508181036000830152611ba881611b6c565b905091905056fea2646970667358221220887f34a91895f56fe84fe89b2511ab2fe3f418fe26f4057fb9f648a6d75ef18a64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 85,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_businessWallet",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 87,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_totalMembers",
        "offset": 0,
        "slot": "2",
        "type": "t_uint128"
      },
      {
        "astId": 147,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "members",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Member)142_storage)"
      },
      {
        "astId": 152,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "enrolled",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(Ranks)132": {
        "encoding": "inplace",
        "label": "enum FFFBusiness.Ranks",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Member)142_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FFFBusiness.Member)",
        "numberOfBytes": "32",
        "value": "t_struct(Member)142_storage"
      },
      "t_struct(Member)142_storage": {
        "encoding": "inplace",
        "label": "struct FFFBusiness.Member",
        "members": [
          {
            "astId": 134,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "memberWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 136,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "isActive",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 138,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 141,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "rank",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(Ranks)132"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}